n  [c           @<Plug>(GitGutterPrevHunk)
n  \hp          @<Plug>(GitGutterPreviewHunk)
n  \hu          @<Plug>(GitGutterUndoHunk)
n  \hs          @<Plug>(GitGutterStageHunk)
x  \hs          @<Plug>(GitGutterStageHunk)
n  ]c           @<Plug>(GitGutterNextHunk)
x  ac           @<Plug>(GitGutterTextObjectOuterVisual)
o  ac           @<Plug>(GitGutterTextObjectOuterPending)
x  ic           @<Plug>(GitGutterTextObjectInnerVisual)
o  ic           @<Plug>(GitGutterTextObjectInnerPending)
s  <Tab>         neosnippet#expandable_or_jumpable() ? "\<Plug>(neosnippet_expand_or_jump)" : "\<Tab>"
s  <CR>        * a<BS>
o  %             <Plug>(matchup-%)
x  %             <Plug>(matchup-%)
n  %             <Plug>(matchup-%)
n  ++          * :exe "resize " . (winheight(0) * 3/2)<CR>
n  --          * :exe "resize " . (winheight(0) * 2/3)<CR>
n  ==          * gg=G''
n  H           * ^
n  L           * $
n  N           * Nzz
n  Q           * <Nop>
noxT             [twitvim]
n  ZQ          * <Nop>
n  ZZ          * <Nop>
o  [%            <Plug>(matchup-[%)
x  [%            <Plug>(matchup-[%)
n  [%            <Plug>(matchup-[%)
n  [twitvim]\  * :<C-U>RefreshTwitter<CR>
n  [twitvim]P  * :<C-U>PreviousTwitter<CR>
n  [twitvim]N  * :<C-U>NextTwitter<CR>
n  [twitvim]S  * :<C-U>DMSentTwitter<CR>
n  [twitvim]D  * :<C-U>DMTwitter<CR>
n  [twitvim]R  * :<C-U>MentionsTwitter<CR><C-W><C-W>
n  [twitvim]U  * :<C-U>UserTwitter<CR><C-W><C-W>
n  [twitvim]F  * :<C-U>FriendsTwitter<CR><C-W><C-W>
n  [twitvim]T  * :<C-U>PosttoTwitter<CR>
n  [twitvim]     <Nop>
n  [gtags]<C-@> * :<C-U>GtagsCursor<CR>
n  [gtags]<C-J> * :<C-U>exe("Gtags -r ".expand('<cword>'))<CR>
n  [gtags]<C-K> * :<C-U>exe("Gtags ".expand('<cword>'))<CR>
n  [gtags]       <Nop>
n  [figitive]l   :<C-U>Glog<CR>
n  [figitive]b   :<C-U>Gblame<CR>
n  [figitive]d   :<C-U>Gdiff<CR>
n  [figitive]s   :<C-U>Gstatus<CR>
n  [figitive]    <Nop>
n  \r          * :cclose<CR>:write<CR>:QuickRun -mode n<CR>
nox\g            [figitive]
o  ]%            <Plug>(matchup-]%)
x  ]%            <Plug>(matchup-]%)
n  ]%            <Plug>(matchup-]%)
o  a%            <Plug>(matchup-a%)
x  a%            <Plug>(matchup-a%)
x  gx            <Plug>NetrwBrowseXVis
n  gx            <Plug>NetrwBrowseX
o  g%            <Plug>(matchup-g%)
x  g%            <Plug>(matchup-g%)
n  g%            <Plug>(matchup-g%)
o  i%            <Plug>(matchup-i%)
x  i%            <Plug>(matchup-i%)
n  j           * gj
n  k           * gk
n  n           * nzz
n  q           * <Nop>
x  v           * $h
n  y<C-G>      & :<C-U>call setreg(v:register, fugitive#Object(@%))<CR>
o  z%            <Plug>(matchup-z%)
x  z%            <Plug>(matchup-z%)
n  z%            <Plug>(matchup-z%)
s  <C-H>       * a<BS>
s  <Del>       * a<BS>
s  <BS>        * a<BS>
n  <SNR>124_:  * :<C-U><C-R>=v:count ? v:count : ''<CR>
   <Plug>AirlineSelectNextTab * :<C-U>call <SNR>98_jump_to_tab(v:count1)<CR>
   <Plug>AirlineSelectPrevTab * :<C-U>call <SNR>98_jump_to_tab(-v:count1)<CR>
   <Plug>AirlineSelectTab0 * :call <SNR>98_select_tab(9)<CR>
   <Plug>AirlineSelectTab9 * :call <SNR>98_select_tab(8)<CR>
   <Plug>AirlineSelectTab8 * :call <SNR>98_select_tab(7)<CR>
   <Plug>AirlineSelectTab7 * :call <SNR>98_select_tab(6)<CR>
   <Plug>AirlineSelectTab6 * :call <SNR>98_select_tab(5)<CR>
   <Plug>AirlineSelectTab5 * :call <SNR>98_select_tab(4)<CR>
   <Plug>AirlineSelectTab4 * :call <SNR>98_select_tab(3)<CR>
   <Plug>AirlineSelectTab3 * :call <SNR>98_select_tab(2)<CR>
   <Plug>AirlineSelectTab2 * :call <SNR>98_select_tab(1)<CR>
   <Plug>AirlineSelectTab1 * :call <SNR>98_select_tab(0)<CR>
   <Plug>+     * <Nop>
   <Plug>_     * <Nop>
v  <Plug>NetrwBrowseXVis * :<C-U>call netrw#BrowseXVis()<CR>
n  <Plug>NetrwBrowseX * :call netrw#BrowseX(netrw#GX(),netrw#CheckIfRemote(netrw#GX()))<CR>
n  <Plug>(twitvim-PosttoTwitter) * :call twitvim#CmdLine_Twitter('', 0)<CR>
v  <C-T>         <Plug>TwitvimVisual
v  <M-t>         <Plug>TwitvimVisual
   <Plug>TwitvimVisual & <SNR>68_Visual
   <SNR>68_Visual * y:call twitvim#post_twitter(@", 0)<CR>
v  <Plug>(quickrun) * :<C-U>QuickRun -mode v<CR>
n  <Plug>(quickrun) * :<C-U>QuickRun -mode n<CR>
n  <Plug>(quickrun-op) * :<C-U>set operatorfunc=quickrun#operator<CR>g@
x  <Plug>(neosnippet_register_oneshot_snippet) * :<C-U>call neosnippet#mappings#_register_oneshot_snippet()<CR>
x  <Plug>(neosnippet_expand_target) * :<C-U>call neosnippet#mappings#_expand_target()<CR>
x  <Plug>(neosnippet_get_selected_text) * :call neosnippet#helpers#get_selected_text(visualmode(), 1)<CR>
x  <Plug>(neosnippet_jump)   <C-G><Plug>(neosnippet_jump)
x  <Plug>(neosnippet_expand)   <C-G><Plug>(neosnippet_expand)
x  <Plug>(neosnippet_jump_or_expand)   <C-G><Plug>(neosnippet_jump_or_expand)
x  <Plug>(neosnippet_expand_or_jump)   <C-G><Plug>(neosnippet_expand_or_jump)
n  <Plug>(neosnippet_jump)   g<C-H><Plug>(neosnippet_jump)
n  <Plug>(neosnippet_expand)   g<C-H><Plug>(neosnippet_expand)
n  <Plug>(neosnippet_jump_or_expand)   g<C-H><Plug>(neosnippet_jump_or_expand)
n  <Plug>(neosnippet_expand_or_jump)   g<C-H><Plug>(neosnippet_expand_or_jump)
s  <Plug>(neosnippet_jump) * neosnippet#mappings#jump_impl()
s  <Plug>(neosnippet_expand) * neosnippet#mappings#expand_impl()
s  <Plug>(neosnippet_jump_or_expand) * neosnippet#mappings#jump_or_expand_impl()
s  <Plug>(neosnippet_expand_or_jump) * neosnippet#mappings#expand_or_jump_impl()
n  <2-LeftMouse>   <Plug>(matchup-double-click)
n  <Plug>(matchup-reload) * :<C-U>MatchupReload<CR>
n  <Plug>(matchup-double-click) * :<C-U>call matchup#text_obj#double_click()<CR>
o  <Plug>(matchup-a%) * :<C-U>call matchup#text_obj#delimited(0, 0, 'delim_all')<CR>
o  <Plug>(matchup-i%) * :<C-U>call matchup#text_obj#delimited(1, 0, 'delim_all')<CR>
x  <Plug>(matchup-a%) * :<C-U>call matchup#text_obj#delimited(0, 1, 'delim_all')<CR>
x  <Plug>(matchup-i%) * :<C-U>call matchup#text_obj#delimited(1, 1, 'delim_all')<CR>
o  <Plug>(matchup-z%) * :<C-U>call matchup#motion#op('z%')<CR>
x  <Plug>(matchup-z%)   <SNR>59_(matchup-z%)
x  <SNR>59_(matchup-z%) * :<C-U>call matchup#motion#jump_inside(1)<CR>
n  <Plug>(matchup-z%) * :<C-U>call matchup#motion#jump_inside(0)<CR>
o  <Plug>(matchup-[%) * :<C-U>call matchup#motion#op('[%')<CR>
o  <Plug>(matchup-]%) * :<C-U>call matchup#motion#op(']%')<CR>
x  <Plug>(matchup-[%)   <SNR>59_(matchup-[%)
x  <Plug>(matchup-]%)   <SNR>59_(matchup-]%)
x  <SNR>59_(matchup-[%) * :<C-U>call matchup#motion#find_unmatched(1, 0)<CR>
x  <SNR>59_(matchup-]%) * :<C-U>call matchup#motion#find_unmatched(1, 1)<CR>
n  <Plug>(matchup-[%) * :<C-U>call matchup#motion#find_unmatched(0, 0)<CR>
n  <Plug>(matchup-]%) * :<C-U>call matchup#motion#find_unmatched(0, 1)<CR>
o  <Plug>(matchup-g%) * :<C-U>call matchup#motion#op('g%')<CR>
x  <Plug>(matchup-g%)   <SNR>59_(matchup-g%)
x  <SNR>59_(matchup-g%) * :<C-U>call matchup#motion#find_matching_pair(1, 0)<CR>
o  <Plug>(matchup-%) * :<C-U>call matchup#motion#op('%')<CR>
x  <Plug>(matchup-%)   <SNR>59_(matchup-%)
x  <SNR>59_(matchup-%) * :<C-U>call matchup#motion#find_matching_pair(1, 1)<CR>
n  <Plug>(matchup-g%) * :<C-U>call matchup#motion#find_matching_pair(0, 0)<CR>
n  <Plug>(matchup-%) * :<C-U>call matchup#motion#find_matching_pair(0, 1)<CR>
n  <SNR>59_(wise) * empty(g:v_motion_force) ? 'v' : g:v_motion_force
n  <Plug>(matchup-hi-surround) * :<C-U>call matchup#matchparen#highlight_surrounding()<CR>
n  <Plug>GitGutterPreviewHunk * :call gitgutter#utility#warn('please change your map <Plug>GitGutterPreviewHunk to <Plug>(GitGutterPreviewHunk)')<CR>
n  <Plug>(GitGutterPreviewHunk) * :GitGutterPreviewHunk<CR>
n  <Plug>GitGutterUndoHunk * :call gitgutter#utility#warn('please change your map <Plug>GitGutterUndoHunk to <Plug>(GitGutterUndoHunk)')<CR>
n  <Plug>(GitGutterUndoHunk) * :GitGutterUndoHunk<CR>
n  <Plug>GitGutterStageHunk * :call gitgutter#utility#warn('please change your map <Plug>GitGutterStageHunk to <Plug>(GitGutterStageHunk)')<CR>
n  <Plug>(GitGutterStageHunk) * :GitGutterStageHunk<CR>
x  <Plug>GitGutterStageHunk * :call gitgutter#utility#warn('please change your map <Plug>GitGutterStageHunk to <Plug>(GitGutterStageHunk)')<CR>
x  <Plug>(GitGutterStageHunk) * :GitGutterStageHunk<CR>
n  <Plug>GitGutterPrevHunk * &diff ? '[c' : ":\<C-U>call gitgutter#utility#warn('please change your map \<Plug>GitGutterPrevHunk to \<Plug>(GitGutterPrevHunk)')\<CR>"
n  <Plug>(GitGutterPrevHunk) * &diff ? '[c' : ":\<C-U>execute v:count1 . 'GitGutterPrevHunk'\<CR>"
n  <Plug>GitGutterNextHunk * &diff ? ']c' : ":\<C-U>call gitgutter#utility#warn('please change your map \<Plug>GitGutterNextHunk to \<Plug>(GitGutterNextHunk)')\<CR>"
n  <Plug>(GitGutterNextHunk) * &diff ? ']c' : ":\<C-U>execute v:count1 . 'GitGutterNextHunk'\<CR>"
x  <Plug>(GitGutterTextObjectOuterVisual) * :<C-U>call gitgutter#hunk#text_object(0)<CR>
x  <Plug>(GitGutterTextObjectInnerVisual) * :<C-U>call gitgutter#hunk#text_object(1)<CR>
o  <Plug>(GitGutterTextObjectOuterPending) * :<C-U>call gitgutter#hunk#text_object(0)<CR>
o  <Plug>(GitGutterTextObjectInnerPending) * :<C-U>call gitgutter#hunk#text_object(1)<CR>
n  <C-Bslash>t   :cs find t <C-R>=expand('<cword>')<CR><CR>
n  <C-Bslash>s   :cs find s <C-R>=expand('<cword>')<CR><CR>
n  <C-Bslash>i   :cs find i <C-R>=expand('<cfile>')<CR><CR>
n  <C-Bslash>g   :cs find g <C-R>=expand('<cword>')<CR><CR>
n  <C-Bslash>f   :cs find f <C-R>=expand('<cfile>')<CR><CR>
n  <C-Bslash>e   :cs find e <C-R>=expand('<cword>')<CR><CR>
n  <C-Bslash>d   :cs find d <C-R>=expand('<cword>')<CR><CR>
n  <C-Bslash>c   :cs find c <C-R>=expand('<cword>')<CR><CR>
n  <C-F6>      * :tabnext<CR>
n  <C-F5>      * :tabprev<CR>
n  <C-L><C-L>  * :<C-U>set nohlsearch!<CR><Esc>
   <C-@>         [gtags]
x  <C-K>         <Plug>(neosnippet_expand_target)
s  <C-K>         <Plug>(neosnippet_expand_or_jump)
n  <C-C>       * quickrun#is_running() ? quickrun#sweep_sessions() : "\<C-C>"
n  <F9>        * :cclose<CR>:write<CR>:QuickRun -mode n<CR>
n  <F11>       * :cclose<CR>:write<CR>:QuickRun -mode n<CR>
n  <C-E>       * :NERDTreeToggle<CR>
