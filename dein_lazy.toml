# dein_lazy.toml
# ---------------------------
#
[[plugins]]
repo = 'roxma/nvim-yarp'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = ['context_filetype.vim', 'nvim-yarp', 'vim-hug-neovim-rpc']
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  let g:deoplete#auto_complete_delay = 0
  let g:deoplete#auto_complete_start_length = 1
  let g:deoplete#enable_camel_case = 0
  let g:deoplete#enable_ignore_case = 0
  let g:deoplete#enable_refresh_always = 0
  let g:deoplete#enable_smart_case = 1
  let g:deoplete#file#enable_buffer_path = 1
  let g:deoplete#max_list = 10000

  inoremap <expr><tab> pumvisible() ? "\<C-n>" :
  \ neosnippet#expandable_or_jumpable() ?
  \ "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
'''
on_i = 1

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets', 'context_filetype.vim']
on_event = 'InsertCharPre'
on_ft = ['snippet']
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)

  smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
  \ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

  let g:neosnippet#enable_completed_snippet = 1
  let g:neosnippet#expand_word_boundary = 1
  let g:neosnippet#snippets_directory = '~/.vim/snippets/,~/.vim/bundle/snipmate/snippets/'
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
'''

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'Shougo/neoyank.vim'

[[plugins]]
repo = 'Shougo/denite.nvim'
depends = ['neomru.vim', 'neoyank.vim']
on_event = 'BufRead'
hook_add = '''
  nmap <silent> <C-r><C-t> :<C-u>Denite filetype<CR>
  nmap <silent> <C-r><C-p> :<C-u>Denite file_rec<CR>
  nmap <silent> <C-r><C-l> :<C-u>Denite line<CR>
  nmap <silent> <C-r><C-g> :<C-u>Denite grep<CR>
  nmap <silent> <C-r><C-]> :<C-u>DeniteCursorWord grep<CR>
  nmap <silent> <C-r><C-u> :<C-u>Denite file_mru<CR>
  nmap <silent> <C-r><C-y> :<C-u>Denite neoyank<CR>
  nmap <silent> <C-r><C-r> :<C-u>Denite -resume<CR>
  nmap <silent> <C-r>; :<C-u>Denite -resume -immediately -select=+1<CR>
  nmap <silent> <C-r>- :<C-u>Denite -resume -immediately -select=-1<CR>
'''


# ------------- for ruby

[[plugins]] # メソッドの定義元にジャンプ
repo = 'szw/vim-tags'
on_ft = ['ruby', 'perl', 'python', 'c', 'sh']

[[plugins]]
repo = 'Shougo/deoplete-rct'
on_ft = ['ruby']

[[plugins]]
repo = 'fishbullet/deoplete-ruby'
on_ft = ['ruby']

[[plugins]]
repo = 'osyo-manga/vim-monster'
on_ft = ['ruby']
hook_add = '''
let g:monster#completion#rcodetools#backend = "async_rct_complete"
let g:deoplete#sources#omni#input_patterns = {
  \ "ruby" : '[^. *\t]\.\w*\|\h\w*::',
  \}
'''


# ------------- for python

[[plugins]]
repo = 'Vimjas/vim-python-pep8-indent'
on_ft = ['python', 'python3']

[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft = ['python', 'python3']
depends = ['deoplete.nvim']

[[plugins]]
repo = 'nvie/vim-flake8'
on_ft = ['python', 'python3']

[[plugins]]
repo = 'w0rp/ale'
on_ft = ['python', 'python3']
hook_source = '''
  let g:ale_lint_on_save = 1
  let g:ale_lint_on_enter = 1
  let g:ale_lint_on_text_changed = 1
  let g:ale_sign_column_always = 1
  let g:ale_set_loclist = 0
  let g:ale_set_quickfix = 1
'''

#[[plugins]]
#repo = 'plytophogy/vim-virtualenv'
#on_ft = ['python']

[[plugins]]
repo = 'miyakogi/vim-virtualenv'
on_ft = ['python', 'python3']

