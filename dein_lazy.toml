# dein_lazy.toml
# ---------------------------
[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = ['nvim-yarp', 'vim-hug-neovim-rpc', 'context_filetype.vim']
on_i = 1
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  let g:deoplete#auto_complete_delay = 0
  let g:deoplete#auto_complete_start_length = 1
  let g:deoplete#enable_camel_case = 0
  let g:deoplete#enable_ignore_case = 0
  let g:deoplete#enable_refresh_always = 0
  let g:deoplete#enable_smart_case = 1
  let g:deoplete#file#enable_buffer_path = 1
  let g:deoplete#max_list = 1000

  inoremap <expr><tab> pumvisible() ? "\<C-n>" :
  \ neosnippet#expandable_or_jumpable() ?
  \ "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
on_i = 1

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets', 'context_filetype.vim']
on_i = 1
on_ft = ['snippet']
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)

  smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
  \ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

  let g:neosnippet#enable_completed_snippet = 1
  let g:neosnippet#expand_word_boundary = 1
  let g:neosnippet#snippets_directory = '~/.vim/snippets/,~/.vim/bundle/snipmate/snippets/'
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
'''

[[plugins]]
repo = 'Shougo/denite.nvim'
depends = ['neomru.vim', 'neoyank.vim']
on_event = 'BufRead'
hook_source = '''
  nmap [denite] <Nop>
  map <C-g> [denite]
  nmap <silent> [denite]<C-t> :<C-u>Denite filetype<CR>
  nmap <silent> [denite]<C-p> :<C-u>Denite file_rec<CR>
  nmap <silent> [denite]<C-l> :<C-u>Denite line<CR>
  nmap <silent> [denite]<C-g> :<C-u>Denite grep<CR>
  nmap <silent> [denite]<C-]> :<C-u>DeniteCursorWord grep<CR>
  nmap <silent> [denite]<C-u> :<C-u>Denite file_mru<CR>
  nmap <silent> [denite]<C-y> :<C-u>Denite neoyank<CR>
  nmap <silent> [denite]<C-r> :<C-u>Denite -resume<CR>
  nmap <silent> [denite]; :<C-u>Denite -resume -immediately -select=+1<CR>
  nmap <silent> [denite]- :<C-u>Denite -resume -immediately -select=-1<CR>
'''

# ------------- for JSON
[[plugins]]
repo = 'elzr/vim-json'
on_ft = ['json']
hook_source = '''
  let g:vim_json_syntax_conceal = 0
'''

# ------------- for JavaScript

[[plugins]] # ES6のハイライト
repo = 'othree/yajs.vim'
on_ft = ['javascript']

# ------------- for ruby
[[plugins]]
repo = 'Shougo/deoplete-rct'
on_ft = ['ruby']

[[plugins]]
repo = 'osyo-manga/vim-monster'
on_ft = ['ruby']
hook_source = '''
  let g:monster#completion#rcodetools#backend = "async_rct_complete"
  let g:deoplete#sources#omni#input_patterns = {
  \ "ruby" : '[^. *\t]\.\w*\|\h\w*::',
  \}
'''

# ------------- for python
[[plugins]]
repo = 'plytophogy/vim-virtualenv'
on_ft = ['python']
 
[[plugins]]
repo = 'Vimjas/vim-python-pep8-indent'
on_ft = ['python']

[[plugins]]
repo = 'zchee/deoplete-jedi'
depends = ['vim-virtualenv', 'deoplete.nvim']
on_ft = ['python']

[[plugins]]
repo = 'w0rp/ale'
depends = ['vim-virtualenv'] # 念のためおまじない
on_ft = ['python']
hook_source = '''
  let g:ale_lint_on_save = 1
  let g:ale_lint_on_enter = 1
  let g:ale_lint_on_text_changed = 0

  let g:ale_sign_error = '✗'
  let g:ale_sign_error = '⚠'
  let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'

  let g:ale_sign_column_always = 1
  let g:ale_set_loclist = 0
  let g:ale_set_quickfix = 0
  let g:ale_open_list = 0
  let g:ale_keep_list_window_open = 0

  let g:ale_linters = {
  \ 'python': ['flake8'],
  \}
  nmap [ale] <Nop>
  map <C-k> [ale]
  nmap <silent> [ale]<C-P> <Plug>(ale_previous)
  nmap <silent> [ale]<C-N> <Plug>(ale_next)
'''

# ------------- for perl
[[plugins]]
repo = 'c9s/perlomni.vim'
on_ft = ['perl']
#build = 'make'

##[[plugins]]
##repo = 'rdunklau/vim-perltidy'
##on_ft = ['perl']

# ------------- for PDF
[[plugins]]
repo = 'itchyny/vim-pdf'
on_ft = ['pdf']

# ------------- for typescript
##  [[plugins]]
##  repo = 'autozimu/LanguageClient-neovim'
##  on_ft = ['typescript']

[[plugins]]
repo = 'HerringtonDarkholme/yats.vim'
on_ft = ['typescript']

##  [[plugins]]
##  repo = 'mhartington/nvim-typescript'
##  build = './install.sh'
##  depends = ['deoplete.nvim']
##  on_ft = ['typescript']

[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = ['typescript']

[[plugins]]
repo  = 'Quramy/tsuquyomi'
on_ft = ['typescript']

[[plugins]]
repo = 'Quramy/vim-js-pretty-template'
on_ft = ['typescript']

[[plugins]]
repo = 'jason0x43/vim-js-indent'
on_ft = ['typescript']

[[plugins]]
repo = 'Quramy/vim-dtsm'
on_ft = ['typescript']

[[plugins]]
repo = 'mhartington/vim-typings'
on_ft = ['typescript']

# -- TypeScript + Vue
[[plugins]]
repo = 'sandersn/vue-ts-plugin'
on_ft = ['vue']

# ------------- for pug
[[plugins]]
repo = 'dNitro/vim-pug-complete'
on_ft = ['pug']

[[plugins]]
repo = 'digitaltoad/vim-pug'
on_ft = ['pug']

[[plugins]]
repo = 'posva/vim-vue'
on_ft = ['vue']

# ------------- for ansible
[[plugins]]
repo = 'pearofducks/ansible-vim.git'
on_ft = ['yaml.ansible']

# ------------- for vim8
[[plugins]]
repo  = 'phpactor/phpactor'
on_ft = ['php']
build = 'composer install'

